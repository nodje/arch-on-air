---
- name: first check python status on remote
  import_playbook: check-python.yml
- name: set the user and the group to get a pwd less sudo user
  import_playbook: passwordless-sudo-setup.yml
#- name: how to reboot or activate network interface change? cf. https://wiki.archlinux.org/index.php/udev#Loading_new_rules
- name: arch-on-air post-installation playbook
  hosts: host
  remote_user: "{{ default_user }}"
  vars:
    travis_ci: false
    sucklessdir: "/home/{{ default_user }}/suckless"
  gather_facts: true
  tasks:
    - debug: msg="Hurrah! we have wlan0 in ansible interfaces!" verbosity=1
      when: '"wlan0" in ansible_interfaces'

    - name: Revert to traditional network device names
      file:
        src: /dev/null
        path: /etc/udev/rules.d/80-net-setup-link.rules
        state: link

    - name: start enable network services
      include: tasks/enablestartservice.yml service={{ item }}
      with_items:
        - wpa_supplicant@wlan0
        - systemd-networkd

    - name: start && enable service dhcpcd@wlan0
      service:
        name: dhcpcd@wlan0
        state: started
        enabled: true
      when: '"wlan0" in ansible_interfaces'

    - name: start && enable service dhcpcd@eth0
      service:
        name: dhcpcd@eth0
        state: started
        enabled: true
      when: '"eth0" in ansible_interfaces'

    - name: start && enable service dhcpcd@eth1
      service:
        name: dhcpcd@eth1
        state: started
        enabled: true
      when: '"eth1" in ansible_interfaces'

    - name: install networkmanager, bonjour and macos network .local name recognition
      pacman: name={{ item }} state=latest
      with_items:
        - avahi
        - nss-mdns
        #- networkmanager
        - ifplugd #to be able to detect and automount wired connections
        #- wpa_actiond #to auto mount wireless connections with netctl
        - wpa_supplicant
      become: true

    - name: first upgrade the system
      pacman:
        update_cache: yes
        upgrade: yes
      become: true
      register: packages
    - debug: var=packages

    - name: copy files under /etc
      copy:
        src: "files/etc/{{ item }}"
        dest: "/etc/{{ item }}"
        mode: 0644
        owner: root
        group: root
      with_items:
        - vconsole.conf
        - systemd/
        #- modprobe.d/
        - wpa_supplicant/
        - X11/xorg.conf.d/
      become: true
    - name: change console font when HiDPI
      lineinfile:
        line: "FONT=ter-132n"
        path: /etc/vconsole.conf
      when: ishidpi
      become: true

    - name: install HiDPI related fonts
      pacman: name={{ item }} state=latest
      with_items:
        - terminus-font
        - adobe-source-code-pro-fonts
      when: ishidpi
      become: true

    - name: install wm stuff
      pacman: name={{ item }} state=latest
      with_items:
        #- lightdm
        #- lighdm-gtk-greeter
        - avahi
        - qt4 #for vlc
        - vlc
        - syncthing
        - xclip #utility to cli copy to clipboard
      become: true

    - name: configure /etc/nssswitch.conf
      lineinfile:
        path: /etc/nsswitch.conf
        regexp: '^hosts: '
        line: 'hosts: files mymachines mdns_minimal [NOTFOUND=return] resolve [!UNAVAIL=return] dns myhostname'
      become: true
    - name: ensure avahi-daemon.service is enabled and started
      systemd:
        name: avahi-daemon.service
        state: started
        enabled: true
      become: true

    - name: ensure /etc/avahi/services is created to avoid boot msg error
      file:
        path: /etc/avahi/services
        state: directory
        mode: 0755
      become: true

    - name: install samba and configure
      pacman: name={{ item }} state=latest
      with_items:
        - samba
      become: true
     #- name: install and configure Suckless st, dmenu, dwm
    #- name: modify st font and font size
    #-name: modify virtual console font and font size
    # -name: download browser plugin and place them in the right config folder.
    # -name: configure ajust screen brightness buttons

    - name: install python2/3 as a start
      pacman: name={{ item }} state=latest
      with_items:
        - python-pip
        - python2
        - python2-pip
        - python2-six
      become: true

    - name: install console apps
      pacman: name={{ item }} state=latest
      with_items:
        - vim
        - emacs
        - tmux
        - tree
        - jq
        - acpi
        - dialog
        - aspell
        - aspell-en
        - busybox
        - dosfstools
        - cowsay
        - pulseaudio
        - alsa-utils
      become: true

    - name: install network tools
      pacman: name={{ item }} state=latest
      with_items:
        - git
        - w3m
        - elinks
        - curl
        - nmap
        - tcpdump
        - traceroute
        - net-tools
        - bind-tools
        - gnu-netcat
        - mtr
        - rsync
        - irssi
        - mutt
        - cyrus-sasl
        - ebtables
        - dnsmasq
        - openconnect
      become: true

    #- name: configure mutt for gmail account
    #  template:

    - name: install graphical libraries & tools
      pacman: name={{ item }} state=latest
      with_items:
        - gcr
        # lib needed to compile dwm
        - libxft
        - libxinerama
        - pkg-config
        # end
        - xf86-video-intel
        - xf86-input-libinput
        - xf86-input-synaptics
        - xorg-server
        - xorg-xinit
        - xorg-xset
        - xorg-xsetroot
        - xorg-xinput
        - xorg-xprop
        - ttf-freefont
        - gtk3
        - webkit2gtk
        - mupdf
        - chromium
        - firefox
        - wireshark-gtk
      become: true

    - name: install developer tools
      pacman: name={{ item }} state=present
      with_items:
        - binutils
        #- bc
        ##- bison
        - flex
        - gcc
        #- gdb
        #- go
        #- m4
        - make
        - autoconf
        - automake
        - libtool
        - pkg-config
        #- fakeroot
        - unzip
        - jq
      become: true

    #- name: configure the audio
    #  import_tasks: tasks/audio.yml
    - name: let's suckless!
      import_tasks: tasks/suckless.yml
